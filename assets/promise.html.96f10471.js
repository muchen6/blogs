import{d as n}from"./app.38e86a53.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="promise-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#promise-\u5BF9\u8C61" aria-hidden="true">#</a> Promise \u5BF9\u8C61</h1><h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p><code>Promise</code> \u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4E5F\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F02\u6B65\u4EE3\u7801...</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>Promise</code> \u6784\u9020\u51FD\u6570\u63A5\u53D7\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570 f1 \u4F5C\u4E3A\u53C2\u6570\uFF0Cf1 \u91CC\u9762\u662F\u5F02\u6B65\u64CD\u4F5C\u7684\u4EE3\u7801\u3002</p><p>\u8FD4\u56DE\u7684 p1 \u5C31\u662F\u4E00\u4E2A <code>Promise</code> \u5B9E\u4F8B</p><h3 id="promise-\u7684\u8BBE\u8BA1\u601D\u60F3" tabindex="-1"><a class="header-anchor" href="#promise-\u7684\u8BBE\u8BA1\u601D\u60F3" aria-hidden="true">#</a> Promise \u7684\u8BBE\u8BA1\u601D\u60F3</h3><p>\u6240\u6709\u5F02\u6B65\u4EFB\u52A1\u90FD\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5B9E\u4F8B</p><p><code>Promise</code> \u5B9E\u4F8B\u6709\u4E00\u4E2A <code>then</code> \u65B9\u6CD5\uFF0C\u7528\u6765\u6307\u5B9A\u4E0B\u4E00\u6B65\u7684\u56DE\u8C03\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// f1\u7684\u5F02\u6B65\u64CD\u4F5C\u6267\u884C\u5B8C\u6210\uFF0C\u5C31\u4F1A\u6267\u884Cf2</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>Promise</code> \u5BF9\u8C61\u901A\u8FC7\u81EA\u8EAB\u7684\u72B6\u6001\uFF0C\u6765\u63A7\u5236\u5F02\u6B65\u64CD\u4F5C</p><h2 id="promise-\u5BF9\u8C61\u7684\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#promise-\u5BF9\u8C61\u7684\u72B6\u6001" aria-hidden="true">#</a> <code>Promise</code> \u5BF9\u8C61\u7684\u72B6\u6001</h2><h3 id="promise-\u5B9E\u4F8B\u4E09\u79CD\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#promise-\u5B9E\u4F8B\u4E09\u79CD\u72B6\u6001" aria-hidden="true">#</a> <code>Promise</code> \u5B9E\u4F8B\u4E09\u79CD\u72B6\u6001</h3><ul><li>\u5F02\u6B65\u64CD\u4F5C\u672A\u5B8C\u6210\uFF08 pending \uFF09</li><li>\u5F02\u6B65\u64CD\u4F5C\u6210\u529F\uFF08 fulfilled \uFF09</li><li>\u5F02\u6B65\u64CD\u4F5C\u5931\u8D25\uFF08 rejected \uFF09</li></ul><p><code>fulfilled</code> \u548C <code>rejected</code> \u5408\u5728\u4E00\u8D77\u79F0\u4E3A <code>resolved</code> \uFF08\u5DF2\u5B9A\u578B\uFF09</p><h3 id="promise-\u5B9E\u4F8B\u53D8\u5316\u9014\u5F84" tabindex="-1"><a class="header-anchor" href="#promise-\u5B9E\u4F8B\u53D8\u5316\u9014\u5F84" aria-hidden="true">#</a> <code>Promise</code> \u5B9E\u4F8B\u53D8\u5316\u9014\u5F84</h3><ul><li>\u4ECE&quot;\u672A\u5B8C\u6210&quot;\u5230&quot;\u6210\u529F&quot;</li><li>\u4ECE&quot;\u672A\u5B8C\u6210&quot;\u5230&quot;\u5931\u8D25&quot;</li></ul><p>\u4E00\u65E6\u72B6\u6001\u53D1\u751F\u53D8\u5316\uFF0C\u5C31\u51DD\u56FA\u4E86\uFF0C\u4E0D\u4F1A\u518D\u6709\u65B0\u7684\u72B6\u6001\u53D8\u5316\u3002</p><p>\u4E00\u65E6\u627F\u8BFA\u6210\u6548\uFF0C\u5C31\u4E0D\u5F97\u518D\u6539\u53D8\u4E86\u3002</p><p>\u8FD9\u610F\u5473\u7740\uFF0C<code>Promise</code> \u5B9E\u4F8B\u7684\u72B6\u6001\u53D8\u5316\u53EA\u53EF\u80FD\u53D1\u751F\u4E00\u6B21\u3002</p><h3 id="promise-\u7684\u6700\u7EC8\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#promise-\u7684\u6700\u7EC8\u7ED3\u679C" aria-hidden="true">#</a> <code>Promise</code> \u7684\u6700\u7EC8\u7ED3\u679C</h3><ul><li>\u5F02\u6B65\u64CD\u4F5C\u6210\u529F\uFF0C<code>Promise</code> \u5B9E\u4F8B\u4F20\u56DE\u4E00\u4E2A\u503C\uFF08 value \uFF09\uFF0C\u72B6\u6001\u53D8\u4E3A <code>fulfilled</code> \u3002</li><li>\u5F02\u6B65\u64CD\u4F5C\u5931\u8D25\uFF0C<code>Promise</code> \u5B9E\u4F8B\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF08 error \uFF09\uFF0C\u72B6\u6001\u53D8\u4E3A <code>rejected</code> \u3002</li></ul><h2 id="\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u7528\u6CD5</h2><h3 id="promise-\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#promise-\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> <code>Promise</code> \u6784\u9020\u51FD\u6570</h3><p>JavaScript \u63D0\u4F9B\u539F\u751F\u7684Promise\u6784\u9020\u51FD\u6570\uFF0C\u7528\u6765\u751F\u6210 Promise \u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token comment">/* \u5F02\u6B65\u64CD\u4F5C\u6210\u529F /){
    resolve(value);
  } else { / \u5F02\u6B65\u64CD\u4F5C\u5931\u8D25 */</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>resolve</code> \u51FD\u6570\u7684\u4F5C\u7528:</p><p>\u5C06 <code>Promise</code> \u5B9E\u4F8B\u7684\u72B6\u6001\u4ECE&quot;\u672A\u5B8C\u6210&quot;\u53D8\u4E3A&quot;\u6210\u529F&quot;\uFF08\u5373\u4ECE <code>pending</code> \u53D8\u4E3A <code>fulfilled</code> \uFF09</p><p>\u5728\u5F02\u6B65\u64CD\u4F5C\u6210\u529F\u65F6\u8C03\u7528\uFF0C\u5E76\u5C06\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C\uFF0C\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u51FA\u53BB\u3002</p><p><code>reject</code> \u51FD\u6570\u7684\u4F5C\u7528:</p><p>\u5C06 <code>Promise</code> \u5B9E\u4F8B\u7684\u72B6\u6001\u4ECE\u4ECE&quot;\u672A\u5B8C\u6210&quot;\u53D8\u4E3A&quot;\u5931\u8D25&quot;\uFF08\u5373\u4ECE <code>pending</code> \u53D8\u4E3A <code>rejected</code> \uFF09</p><p>\u5728\u5F02\u6B65\u64CD\u4F5C\u5931\u8D25\u65F6\u8C03\u7528\uFF0C\u5E76\u5C06\u5F02\u6B65\u64CD\u4F5C\u62A5\u51FA\u7684\u9519\u8BEF\uFF0C\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u51FA\u53BB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">timeout</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5B9E\u4F8B\u3002100 \u6BEB\u79D2\u4EE5\u540E\uFF0C\u8BE5\u5B9E\u4F8B\u7684\u72B6\u6001\u4F1A\u53D8\u4E3A <code>fulfilled</code></p><h3 id="promise-\u65B0\u5EFA\u540E\u5C31\u4F1A\u7ACB\u5373\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#promise-\u65B0\u5EFA\u540E\u5C31\u4F1A\u7ACB\u5373\u6267\u884C" aria-hidden="true">#</a> <code>Promise</code> \u65B0\u5EFA\u540E\u5C31\u4F1A\u7ACB\u5373\u6267\u884C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Promise&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;resolved.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Promise</span>
<span class="token comment">// Hi!</span>
<span class="token comment">// resolved</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u9996\u5148\u8F93\u51FA\u7684\u662F Promise</p><p>\u7136\u540E\uFF0C<code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5C06\u5728\u5F53\u524D\u811A\u672C\u6240\u6709\u540C\u6B65\u4EFB\u52A1\u6267\u884C\u5B8C\u624D\u4F1A\u6267\u884C</p><p>\u6240\u4EE5 resolved \u6700\u540E\u8F93\u51FA</p><h3 id="\u5F02\u6B65\u52A0\u8F7D\u56FE\u7247" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u52A0\u8F7D\u56FE\u7247" aria-hidden="true">#</a> \u5F02\u6B65\u52A0\u8F7D\u56FE\u7247</h3><p>\u4F7F\u7528 <code>Promise</code> \u5305\u88C5\u4E86\u4E00\u4E2A\u56FE\u7247\u52A0\u8F7D\u7684\u5F02\u6B65\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">loadImageAsync</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    image<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Could not load image at &#39;</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    image<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u7528-promise-\u5BF9\u8C61-\u5B9E\u73B0\u7684-ajax-\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7528-promise-\u5BF9\u8C61-\u5B9E\u73B0\u7684-ajax-\u64CD\u4F5C" aria-hidden="true">#</a> \u7528 <code>Promise</code> \u5BF9\u8C61 \u5B9E\u73B0\u7684 <code>Ajax</code> \u64CD\u4F5C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getJSON</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    client<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    client<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> handler<span class="token punctuation">;</span>
    client<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">;</span>
    client<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Accept&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/posts.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">json</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Contents: &#39;</span> <span class="token operator">+</span> json<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><code>getJSON</code> \u662F\u5BF9 <code>XMLHttpRequest</code> \u5BF9\u8C61\u7684\u5C01\u88C5</p><p>\u7528\u4E8E\u53D1\u51FA\u4E00\u4E2A\u9488\u5BF9 <code>JSON</code> \u6570\u636E\u7684 <code>HTTP</code> \u8BF7\u6C42</p><p>\u5E76\u4E14\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61</p><p>\u6CE8\u610F: \u5728 <code>getJSON</code> \u5185\u90E8\uFF0C<code>resolve</code> \u51FD\u6570\u548C <code>reject</code> \u51FD\u6570\u8C03\u7528\u65F6\uFF0C\u90FD\u5E26\u6709\u53C2\u6570</p><p>\u5982\u679C\u8C03\u7528 <code>resolve</code> \u51FD\u6570\u548C <code>reject</code> \u51FD\u6570\u65F6\u5E26\u6709\u53C2\u6570\uFF0C\u90A3\u4E48\u5B83\u4EEC\u7684\u53C2\u6570\u4F1A\u88AB\u4F20\u9012\u7ED9\u56DE\u8C03\u51FD\u6570\u3002</p><p><code>reject</code> \u51FD\u6570\u7684\u53C2\u6570\u901A\u5E38\u662F <code>Error</code> \u5BF9\u8C61\u7684\u5B9E\u4F8B\uFF0C\u8868\u793A\u629B\u51FA\u7684\u9519\u8BEF\uFF1B</p><h3 id="resolve-\u51FD\u6570\u7684\u53C2\u6570\u9664\u4E86\u6B63\u5E38\u7684\u503C\u4EE5\u5916-\u8FD8\u53EF\u80FD\u662F\u53E6\u4E00\u4E2A-promise-\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#resolve-\u51FD\u6570\u7684\u53C2\u6570\u9664\u4E86\u6B63\u5E38\u7684\u503C\u4EE5\u5916-\u8FD8\u53EF\u80FD\u662F\u53E6\u4E00\u4E2A-promise-\u5B9E\u4F8B" aria-hidden="true">#</a> <code>resolve</code> \u51FD\u6570\u7684\u53C2\u6570\u9664\u4E86\u6B63\u5E38\u7684\u503C\u4EE5\u5916\uFF0C\u8FD8\u53EF\u80FD\u662F\u53E6\u4E00\u4E2A <code>Promise</code> \u5B9E\u4F8B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>p1</code> \u548C <code>p2</code> \u90FD\u662F <code>Promise</code> \u7684\u5B9E\u4F8B</p><p><code>p2</code> \u7684 <code>resolve</code> \u65B9\u6CD5\u5C06 <code>p1</code> \u4F5C\u4E3A\u53C2\u6570\uFF0C\u5373\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C\u662F\u8FD4\u56DE\u53E6\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C</p><p><code>p1</code> \u7684\u72B6\u6001\u5C31\u4F1A\u4F20\u9012\u7ED9 <code>p2</code> \uFF1B <code>p1</code> \u7684\u72B6\u6001\u51B3\u5B9A\u4E86 <code>p2</code> \u7684\u72B6\u6001</p><p>\u5982\u679C <code>p1</code> \u7684\u72B6\u6001\u662F <code>pending</code> \uFF0C\u90A3\u4E48 <code>p2</code> \u7684\u56DE\u8C03\u51FD\u6570\u5C31\u4F1A\u7B49\u5F85 <code>p1</code> \u7684\u72B6\u6001\u6539\u53D8\uFF1B</p><h3 id="\u5982\u679C-p1-\u7684\u72B6\u6001\u5DF2\u7ECF\u662F-resolved-\u6216\u8005-rejected-\u90A3\u4E48-p2-\u7684\u56DE\u8C03\u51FD\u6570\u5C06\u4F1A\u7ACB\u523B\u6267\u884C\u3002" tabindex="-1"><a class="header-anchor" href="#\u5982\u679C-p1-\u7684\u72B6\u6001\u5DF2\u7ECF\u662F-resolved-\u6216\u8005-rejected-\u90A3\u4E48-p2-\u7684\u56DE\u8C03\u51FD\u6570\u5C06\u4F1A\u7ACB\u523B\u6267\u884C\u3002" aria-hidden="true">#</a> \u5982\u679C <code>p1</code> \u7684\u72B6\u6001\u5DF2\u7ECF\u662F <code>resolved</code> \u6216\u8005 <code>rejected</code> \uFF0C\u90A3\u4E48 <code>p2</code> \u7684\u56DE\u8C03\u51FD\u6570\u5C06\u4F1A\u7ACB\u523B\u6267\u884C\u3002</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

p2
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Error: fail</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>p1</code> \u662F\u4E00\u4E2A <code>Promise</code> \uFF0C3 \u79D2\u4E4B\u540E\u53D8\u4E3A <code>rejected</code></p><p><code>p2</code> \u7684\u72B6\u6001\u5728 1 \u79D2\u4E4B\u540E\u6539\u53D8\uFF0C<code>resolve</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u662F <code>p1</code></p><p><code>p2</code> \u8FD4\u56DE\u7684\u662F\u53E6\u4E00\u4E2A <code>Promise</code> \uFF0C\u5BFC\u81F4 <code>p2</code> \u81EA\u5DF1\u7684\u72B6\u6001\u65E0\u6548\u4E86\uFF0C\u7531 <code>p1</code> \u7684\u72B6\u6001\u51B3\u5B9A <code>p2</code> \u7684\u72B6\u6001\u3002</p><p>\u6240\u4EE5\uFF0C\u540E\u9762\u7684 <code>then</code> \u8BED\u53E5\u90FD\u53D8\u6210\u9488\u5BF9\u540E\u8005\uFF08<code>p1</code>\uFF09</p><p>\u53C8\u8FC7\u4E86 2 \u79D2\uFF0C<code>p1</code> \u53D8\u4E3A <code>rejected</code>\uFF0C\u5BFC\u81F4\u89E6\u53D1 <code>catch</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570</p><h3 id="\u8C03\u7528-resolve-\u6216-reject-\u5E76\u4E0D\u4F1A\u7EC8\u7ED3-promise-\u7684\u53C2\u6570\u51FD\u6570\u7684\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u8C03\u7528-resolve-\u6216-reject-\u5E76\u4E0D\u4F1A\u7EC8\u7ED3-promise-\u7684\u53C2\u6570\u51FD\u6570\u7684\u6267\u884C" aria-hidden="true">#</a> \u8C03\u7528 <code>resolve</code> \u6216 <code>reject</code> \u5E76\u4E0D\u4F1A\u7EC8\u7ED3 <code>Promise</code> \u7684\u53C2\u6570\u51FD\u6570\u7684\u6267\u884C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2</span>
<span class="token comment">// 1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8C03\u7528 resolve(1) \u4EE5\u540E\uFF0C\u540E\u9762\u7684 console.log(2) \u8FD8\u662F\u4F1A\u6267\u884C\uFF0C\u5E76\u4E14\u4F1A\u9996\u5148\u6253\u5370\u51FA\u6765</p><p>\u56E0\u4E3A\u7ACB\u5373 <code>resolved</code> \u7684 <code>Promise</code> \u662F\u5728\u672C\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u7684\u672B\u5C3E\u6267\u884C\uFF0C\u603B\u662F\u665A\u4E8E\u672C\u8F6E\u5FAA\u73AF\u7684\u540C\u6B65\u4EFB\u52A1</p><p>\u8C03\u7528 <code>resolve</code> \u6216 <code>reject</code> \u4EE5\u540E\uFF0C<code>Promise</code> \u7684\u4F7F\u547D\u5C31\u5B8C\u6210\u4E86\uFF0C\u540E\u7EE7\u64CD\u4F5C\u5E94\u8BE5\u653E\u5230 <code>then</code> \u65B9\u6CD5\u91CC\u9762\uFF0C\u800C\u4E0D\u5E94\u8BE5\u76F4\u63A5\u5199\u5728 <code>resolve</code> \u6216 <code>reject</code> \u7684\u540E\u9762\u3002\u6240\u4EE5\uFF0C\u6700\u597D\u5728\u5B83\u4EEC\u524D\u9762\u52A0\u4E0A <code>return</code> \u8BED\u53E5\uFF0C\u8FD9\u6837\u5C31\u4E0D\u4F1A\u6709\u610F\u5916</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u540E\u9762\u7684\u8BED\u53E5\u4E0D\u4F1A\u6267\u884C</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="promise-prototype-then" tabindex="-1"><a class="header-anchor" href="#promise-prototype-then" aria-hidden="true">#</a> Promise.prototype.then()</h2><p><code>Promise</code> \u5B9E\u4F8B\u5177\u6709 <code>then</code> \u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C<code>then</code> \u65B9\u6CD5\u662F\u5B9A\u4E49\u5728\u539F\u578B\u5BF9\u8C61 Promise.prototype \u4E0A\u7684\u3002</p><p>\u4F5C\u7528\uFF1A\u4E3A <code>Promise</code> \u5B9E\u4F8B\u6DFB\u52A0\u72B6\u6001\u6539\u53D8\u65F6\u7684\u56DE\u8C03\u51FD\u6570</p><p><code>then</code> \u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F <code>resolved</code> \u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F <code>rejected</code> \u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5B83\u4EEC\u90FD\u662F\u53EF\u9009\u7684</p><p><code>then</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684 <code>Promise</code> \u5B9E\u4F8B\uFF08\u6CE8\u610F\uFF0C\u4E0D\u662F\u539F\u6765\u90A3\u4E2A <code>Promise</code> \u5B9E\u4F8B\uFF09\u3002</p><p>\u56E0\u6B64\u53EF\u4EE5\u91C7\u7528\u94FE\u5F0F\u5199\u6CD5\uFF0C\u5373 <code>then</code> \u65B9\u6CD5\u540E\u9762\u518D\u8C03\u7528\u53E6\u4E00\u4E2A <code>then</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/posts.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">json</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> json<span class="token punctuation">.</span>post<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u7B2C\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u5B8C\u6210\u4EE5\u540E\uFF0C\u4F1A\u5C06\u8FD4\u56DE\u7ED3\u679C\u4F5C\u4E3A\u53C2\u6570\uFF0C\u4F20\u5165\u7B2C\u4E8C\u4E2A\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u91C7\u7528\u94FE\u5F0F\u7684 <code>then</code> \uFF0C\u53EF\u4EE5\u6307\u5B9A\u4E00\u7EC4\u6309\u7167\u6B21\u5E8F\u8C03\u7528\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u524D\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u6709\u53EF\u80FD\u8FD4\u56DE\u7684\u8FD8\u662F\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\uFF08\u5373\u6709\u5F02\u6B65\u64CD\u4F5C\uFF09\uFF0C\u8FD9\u65F6\u540E\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u5C31\u4F1A\u7B49\u5F85\u8BE5 <code>Promise</code> \u5BF9\u8C61\u7684\u72B6\u6001\u53D1\u751F\u53D8\u5316\uFF0C\u624D\u4F1A\u88AB\u8C03\u7528\u3002</p><hr><p><code>Promise</code>\u5B9E\u4F8B\u751F\u6210\u4EE5\u540E\uFF0C\u53EF\u4EE5\u7528 <code>then</code> \u65B9\u6CD5\u5206\u522B\u6307\u5B9A <code>resolved</code> \u72B6\u6001\u548C <code>rejected</code> \u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// success</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// failure</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>Promise</code> \u5B9E\u4F8B\u7684 <code>then</code> \u65B9\u6CD5\uFF0C\u7528\u6765\u6DFB\u52A0\u56DE\u8C03\u51FD\u6570\u3002</p><p><code>then</code> \u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u4E24\u4E2A\u56DE\u8C03\u51FD\u6570\uFF1A</p><ul><li>\u5F02\u6B65\u64CD\u4F5C\u6210\u529F\uFF08\u53D8\u4E3A <code>fulfilled</code> \u72B6\u6001\uFF09\u65F6\u7684\u56DE\u8C03\u51FD\u6570</li><li>\u5F02\u6B65\u64CD\u4F5C\u5931\u8D25\uFF08\u53D8\u4E3A <code>rejected</code> \u72B6\u6001\uFF09\u65F6\u7684\u56DE\u8C03\u51FD\u6570\uFF08\u8BE5\u53C2\u6570\u53EF\u4EE5\u7701\u7565\uFF09</li></ul><p>\u4E00\u65E6\u72B6\u6001\u6539\u53D8\uFF0C\u5C31\u8C03\u7528\u76F8\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &quot;\u6210\u529F&quot;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>\u2018\u5931\u8D25\u2019<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Error: \u5931\u8D25</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>p1 \u548C p2 \u90FD\u662F <code>Promise</code> \u5B9E\u4F8B\uFF0C\u5B83\u4EEC\u7684 <code>then</code> \u65B9\u6CD5\u7ED1\u5B9A\u4E24\u4E2A\u56DE\u8C03\u51FD\u6570\uFF1A</p><p>\u6210\u529F\u65F6\u7684\u56DE\u8C03\u51FD\u6570 console.log \uFF0C\u5931\u8D25\u65F6\u7684\u56DE\u8C03\u51FD\u6570 console.error \u3002</p><p>p1 \u7684\u72B6\u6001\u53D8\u4E3A\u6210\u529F\uFF0Cp2 \u7684\u72B6\u6001\u53D8\u4E3A\u5931\u8D25\uFF0C\u5BF9\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u4F1A\u6536\u5230\u5F02\u6B65\u64CD\u4F5C\u4F20\u56DE\u7684\u503C\uFF0C\u7136\u540E\u5728\u63A7\u5236\u53F0\u8F93\u51FA</p><p><code>then</code> \u65B9\u6CD5\u53EF\u4EE5\u94FE\u5F0F\u4F7F\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>p1
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>step1<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>step2<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>step3<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    console<span class="token punctuation">.</span>log<span class="token punctuation">,</span>
    console<span class="token punctuation">.</span>error
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>p1 \u540E\u9762\u6709\u51E0\u4E2A <code>then</code> \uFF0C\u610F\u5473\u4F9D\u6B21\u6709\u51E0\u4E2A\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u53EA\u8981\u524D\u4E00\u6B65\u7684\u72B6\u6001\u53D8\u4E3A <code>fulfilled</code> \uFF0C\u5C31\u4F1A\u4F9D\u6B21\u6267\u884C\u7D27\u8DDF\u5728\u540E\u9762\u7684\u56DE\u8C03\u51FD\u6570</p><p>\u6700\u540E\u4E00\u4E2A <code>then</code> \u65B9\u6CD5\uFF0C\u56DE\u8C03\u51FD\u6570\u662F console.log \u548C console.error \uFF0C\u7528\u6CD5\u4E0A\u6709\u4E00\u70B9\u91CD\u8981\u7684\u533A\u522B:</p><p>console.log \u53EA\u663E\u793A step3 \u7684\u8FD4\u56DE\u503C\uFF0C\u800C console.error \u53EF\u4EE5\u663E\u793A p1 \u3001step1 \u3001step2 \u3001step3 \u4E4B\u4E2D\u4EFB\u610F\u4E00\u4E2A\u53D1\u751F\u7684\u9519\u8BEF\u3002</p><p>\u5982\u679C step1 \u7684\u72B6\u6001\u53D8\u4E3A <code>rejected</code> \uFF0C\u90A3\u4E48 step2 \u548C step3 \u90FD\u4E0D\u4F1A\u6267\u884C\u4E86\uFF08\u56E0\u4E3A\u5B83\u4EEC\u662F resolved \u7684\u56DE\u8C03\u51FD\u6570\uFF09\u3002</p><p><code>Promise</code> \u5F00\u59CB\u5BFB\u627E\uFF0C\u63A5\u4E0B\u6765\u7B2C\u4E00\u4E2A\u4E3A <code>rejected</code> \u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5728\u4E0A\u9762\u4EE3\u7801\u4E2D\u662F console.error</p><p>\u2234 <code>Promise</code> \u5BF9\u8C61\u7684\u62A5\u9519\u5177\u6709\u4F20\u9012\u6027</p><h2 id="promise-prototype-catch" tabindex="-1"><a class="header-anchor" href="#promise-prototype-catch" aria-hidden="true">#</a> Promise.prototype.catch()</h2><p><code>Promise.prototype.catch()</code> \u65B9\u6CD5\u662F <code>.then(null, rejection)</code> \u6216 <code>.then(undefined, rejection)</code> \u7684\u522B\u540D\uFF0C\u7528\u4E8E\u6307\u5B9A\u53D1\u751F\u9519\u8BEF\u65F6\u7684\u56DE\u8C03\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&#39;/posts.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">posts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406 getJSON \u548C \u524D\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u8FD0\u884C\u65F6\u53D1\u751F\u7684\u9519\u8BEF</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u53D1\u751F\u9519\u8BEF\uFF01&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>getJSON()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\uFF0C\u5982\u679C\u8BE5\u5BF9\u8C61\u72B6\u6001\u53D8\u4E3A <code>resolved</code> \uFF0C\u5219\u4F1A\u8C03\u7528 <code>then()</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF1B</p><p>\u5982\u679C\u5F02\u6B65\u64CD\u4F5C\u629B\u51FA\u9519\u8BEF\uFF0C\u72B6\u6001\u5C31\u4F1A\u53D8\u4E3A <code>rejected</code> \uFF0C\u5C31\u4F1A\u8C03\u7528 <code>catch()</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5904\u7406\u8FD9\u4E2A\u9519\u8BEF</p><p><code>then()</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5982\u679C\u8FD0\u884C\u4E2D\u629B\u51FA\u9519\u8BEF\uFF0C\u4E5F\u4F1A\u88AB <code>catch()</code> \u65B9\u6CD5\u6355\u83B7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fulfilled:&#39;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;rejected&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fulfilled:&#39;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;rejected:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="promise-prototype-finally" tabindex="-1"><a class="header-anchor" href="#promise-prototype-finally" aria-hidden="true">#</a> Promise.prototype.finally()</h2><p><code>finally()</code> \u65B9\u6CD5\u7528\u4E8E\u6307\u5B9A\u4E0D\u7BA1 <code>Promise</code> \u5BF9\u8C61\u6700\u540E\u72B6\u6001\u5982\u4F55\uFF0C\u90FD\u4F1A\u6267\u884C\u7684\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E0D\u7BA1 <code>promise</code> \u6700\u540E\u7684\u72B6\u6001\uFF0C\u5728\u6267\u884C\u5B8C <code>then</code> \u6216 <code>catch</code> \u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u4EE5\u540E\uFF0C\u90FD\u4F1A\u6267\u884C <code>finally</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570</p><h3 id="\u670D\u52A1\u5668\u4F7F\u7528-promise-\u5904\u7406\u8BF7\u6C42-\u7136\u540E\u4F7F\u7528-finally-\u65B9\u6CD5\u5173\u6389\u670D\u52A1\u5668" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u5668\u4F7F\u7528-promise-\u5904\u7406\u8BF7\u6C42-\u7136\u540E\u4F7F\u7528-finally-\u65B9\u6CD5\u5173\u6389\u670D\u52A1\u5668" aria-hidden="true">#</a> \u670D\u52A1\u5668\u4F7F\u7528 <code>Promise</code> \u5904\u7406\u8BF7\u6C42\uFF0C\u7136\u540E\u4F7F\u7528 <code>finally</code> \u65B9\u6CD5\u5173\u6389\u670D\u52A1\u5668</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span>server<span class="token punctuation">.</span>stop<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>finally</code> \u65B9\u6CD5\u91CC\u9762\u7684\u64CD\u4F5C\uFF0C\u4E0E\u72B6\u6001\u65E0\u5173\u7684\uFF0C\u4E0D\u4F9D\u8D56\u4E8E <code>Promise</code> \u7684\u6267\u884C\u7ED3\u679C</p><p><code>finally</code> \u672C\u8D28\u4E0A\u662F <code>then</code> \u65B9\u6CD5\u7684\u7279\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise
<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8BED\u53E5</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
promise
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BED\u53E5</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BED\u53E5</span>
    <span class="token keyword">throw</span> error<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u5982\u679C\u4E0D\u4F7F\u7528 <code>finally</code> \u65B9\u6CD5\uFF0C\u540C\u6837\u7684\u8BED\u53E5\u9700\u8981\u4E3A\u6210\u529F\u548C\u5931\u8D25\u4E24\u79CD\u60C5\u51B5\u5404\u5199\u4E00\u6B21\u3002\u6709\u4E86 <code>finally</code> \u65B9\u6CD5\uFF0C\u5219\u53EA\u9700\u8981\u5199\u4E00\u6B21\u3002</p><h2 id="promise-all" tabindex="-1"><a class="header-anchor" href="#promise-all" aria-hidden="true">#</a> Promise.all()</h2><p><code>Promise.all()</code> \u65B9\u6CD5\u7528\u4E8E\u5C06\u591A\u4E2A <code>Promise</code> \u5B9E\u4F8B\uFF0C\u5305\u88C5\u6210\u4E00\u4E2A\u65B0\u7684 <code>Promise</code> \u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>Promise.all()</code> \u65B9\u6CD5\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\uFF0C<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u90FD\u662F <code>Promise</code> \u5B9E\u4F8B\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u5C31\u4F1A\u5148\u8C03\u7528\u4E0B\u9762\u8BB2\u5230\u7684<code>Promise.resolve</code> \u65B9\u6CD5\uFF0C\u5C06\u53C2\u6570\u8F6C\u4E3A <code>Promise</code> \u5B9E\u4F8B\uFF0C\u518D\u8FDB\u4E00\u6B65\u5904\u7406</p><p><code>Promise.all()</code> \u65B9\u6CD5\u7684\u53C2\u6570\u53EF\u4EE5\u4E0D\u662F\u6570\u7EC4\uFF0C\u4F46\u5FC5\u987B\u5177\u6709 <code>Iterator</code> (\u8FED\u4EE3\u5668)\u63A5\u53E3\uFF0C\u4E14\u8FD4\u56DE\u7684\u6BCF\u4E2A\u6210\u5458\u90FD\u662F <code>Promise</code> \u5B9E\u4F8B</p><p><code>p</code> \u7684\u72B6\u6001\u7531 <code>p1</code> \u3001 <code>p2</code> \u3001 <code>p3</code> \u51B3\u5B9A\uFF0C\u5206\u6210\u4E24\u79CD\u60C5\u51B5</p><ul><li><p>\u53EA\u6709 <code>p1</code> \u3001 <code>p2</code> \u3001 <code>p3</code> \u7684\u72B6\u6001\u90FD\u53D8\u6210 <code>fulfilled</code> \uFF0C <code>p</code> \u7684\u72B6\u6001\u624D\u4F1A\u53D8\u6210 <code>fulfilled</code> \uFF0C\u6B64\u65F6 <code>p1</code> \u3001 <code>p2</code> \u3001 <code>p3</code> \u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F20\u9012\u7ED9p\u7684\u56DE\u8C03\u51FD\u6570\u3002</p></li><li><p>\u53EA\u8981 <code>p1</code> \u3001 <code>p2</code> \u3001 <code>p3 </code>\u4E4B\u4E2D\u6709\u4E00\u4E2A\u88AB <code>rejected</code> \uFF0C <code>p</code> \u7684\u72B6\u6001\u5C31\u53D8\u6210 <code>rejected</code> \uFF0C\u6B64\u65F6\u7B2C\u4E00\u4E2A\u88AB <code>reject </code>\u7684\u5B9E\u4F8B\u7684\u8FD4\u56DE\u503C\uFF0C\u4F1A\u4F20\u9012\u7ED9 <code>p</code> \u7684\u56DE\u8C03\u51FD\u6570\u3002</p></li></ul><h2 id="promise-race" tabindex="-1"><a class="header-anchor" href="#promise-race" aria-hidden="true">#</a> Promise.race()</h2><p><code>Promise.race()</code> \u65B9\u6CD5\u5C06\u591A\u4E2A <code>Promise</code> \u5B9E\u4F8B\uFF0C\u5305\u88C5\u6210\u4E00\u4E2A\u65B0\u7684 <code>Promise</code> \u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u53EA\u8981 <code>p1</code> \u3001 <code>p2</code> \u3001 <code>p3</code> \u4E4B\u4E2D\u6709\u4E00\u4E2A\u5B9E\u4F8B\u7387\u5148\u6539\u53D8\u72B6\u6001\uFF0Cp\u7684\u72B6\u6001\u5C31\u8DDF\u7740\u6539\u53D8\u3002\u90A3\u4E2A\u7387\u5148\u6539\u53D8\u7684 <code>Promise</code> \u5B9E\u4F8B\u7684\u8FD4\u56DE\u503C\uFF0C\u5C31\u4F20\u9012\u7ED9 <code>p</code> \u7684\u56DE\u8C03\u51FD\u6570</p><h3 id="\u5982\u679C\u6307\u5B9A\u65F6\u95F4\u5185\u6CA1\u6709\u83B7\u5F97\u7ED3\u679C-\u5C31\u5C06-promise-\u7684\u72B6\u6001\u53D8\u4E3A-reject-\u5426\u5219\u53D8\u4E3A-resolve" tabindex="-1"><a class="header-anchor" href="#\u5982\u679C\u6307\u5B9A\u65F6\u95F4\u5185\u6CA1\u6709\u83B7\u5F97\u7ED3\u679C-\u5C31\u5C06-promise-\u7684\u72B6\u6001\u53D8\u4E3A-reject-\u5426\u5219\u53D8\u4E3A-resolve" aria-hidden="true">#</a> \u5982\u679C\u6307\u5B9A\u65F6\u95F4\u5185\u6CA1\u6709\u83B7\u5F97\u7ED3\u679C\uFF0C\u5C31\u5C06 <code>Promise</code> \u7684\u72B6\u6001\u53D8\u4E3A <code>reject</code> \uFF0C\u5426\u5219\u53D8\u4E3A <code>resolve</code></h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/resource-that-may-take-a-while&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;request timeout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5982\u679C 5 \u79D2\u4E4B\u5185 <code>fetch</code> \u65B9\u6CD5\u65E0\u6CD5\u8FD4\u56DE\u7ED3\u679C\uFF0C\u53D8\u91CF <code>p</code> \u7684\u72B6\u6001\u5C31\u4F1A\u53D8\u4E3A <code>rejected</code> \uFF0C\u4ECE\u800C\u89E6\u53D1 <code>catch</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570</p><h2 id="promise-allsettled" tabindex="-1"><a class="header-anchor" href="#promise-allsettled" aria-hidden="true">#</a> Promise.allSettled()</h2><p><code>Promise.all()</code> \u65B9\u6CD5\u53EA\u9002\u5408\u6240\u6709\u5F02\u6B65\u64CD\u4F5C\u90FD\u6210\u529F\u7684\u60C5\u51B5\uFF0C\u5982\u679C\u6709\u4E00\u4E2A\u64CD\u4F5C\u5931\u8D25\uFF0C\u5C31\u65E0\u6CD5\u6EE1\u8DB3\u8981\u6C42\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> urls <span class="token operator">=</span> <span class="token punctuation">[</span>url_1<span class="token punctuation">,</span> url_2<span class="token punctuation">,</span> url_3<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> requests <span class="token operator">=</span> urls<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token function">fetch</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>requests<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6240\u6709\u8BF7\u6C42\u90FD\u6210\u529F\u3002&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u81F3\u5C11\u4E00\u4E2A\u8BF7\u6C42\u5931\u8D25\uFF0C\u5176\u4ED6\u8BF7\u6C42\u53EF\u80FD\u8FD8\u6CA1\u7ED3\u675F\u3002&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>Promise.all()</code> \u53EF\u4EE5\u786E\u5B9A\u6240\u6709\u8BF7\u6C42\u90FD\u6210\u529F\u4E86\uFF0C\u4F46\u662F\u53EA\u8981\u6709\u4E00\u4E2A\u8BF7\u6C42\u5931\u8D25\uFF0C\u5B83\u5C31\u4F1A\u62A5\u9519\uFF0C\u800C\u4E0D\u7BA1\u53E6\u5916\u7684\u8BF7\u6C42\u662F\u5426\u7ED3\u675F\u3002</p><p><code>Promise.allSettled()</code> \u65B9\u6CD5\uFF0C\u7528\u6765\u786E\u5B9A\u4E00\u7EC4\u5F02\u6B65\u64CD\u4F5C\u662F\u5426\u90FD\u7ED3\u675F\u4E86\uFF08\u4E0D\u7BA1\u6210\u529F\u6216\u5931\u8D25\uFF09\u3002</p><p><code>Settled</code> \u5305\u542B\u4E86 <code>fulfilled</code> \u548C <code>rejected</code> \u4E24\u79CD\u60C5\u51B5\u3002</p><p><code>Promise.allSettled()</code> \u65B9\u6CD5\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\uFF0C\u6570\u7EC4\u7684\u6BCF\u4E2A\u6210\u5458\u90FD\u662F\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 <code>Promise</code> \u5BF9\u8C61\u3002</p><p>\u53EA\u6709\u7B49\u5230\u53C2\u6570\u6570\u7EC4\u7684\u6240\u6709 <code>Promise</code> \u5BF9\u8C61\u90FD\u53D1\u751F\u72B6\u6001\u53D8\u66F4\uFF08\u4E0D\u7BA1\u662F <code>fulfilled</code> \u8FD8\u662F <code>rejected</code> \uFF09\uFF0C\u8FD4\u56DE\u7684 <code>Promise</code> \u5BF9\u8C61\u624D\u4F1A\u53D1\u751F\u72B6\u6001\u53D8\u66F4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api-1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api-2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api-3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">removeLoadingIndicator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6570\u7EC4 <code>promises</code> \u5305\u542B\u4E86\u4E09\u4E2A\u8BF7\u6C42\uFF0C\u53EA\u6709\u7B49\u5230\u8FD9\u4E09\u4E2A\u8BF7\u6C42\u90FD\u7ED3\u675F\u4E86\uFF08\u4E0D\u7BA1\u8BF7\u6C42\u6210\u529F\u8FD8\u662F\u5931\u8D25\uFF09\uFF0C <code>removeLoadingIndicator()</code> \u624D\u4F1A\u6267\u884C</p><p>\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u7684\u65B0\u7684 <code>Promise</code> \u5B9E\u4F8B\uFF0C\u4E00\u65E6\u53D1\u751F\u72B6\u6001\u53D8\u66F4\uFF0C\u72B6\u6001\u603B\u662F <code>fulfilled</code> \uFF0C\u4E0D\u4F1A\u53D8\u6210 <code>rejected</code> \u3002</p><p>\u72B6\u6001\u53D8\u6210 <code>fulfilled</code> \u540E\uFF0C\u5B83\u7684\u56DE\u8C03\u51FD\u6570\u4F1A\u63A5\u6536\u5230\u4E00\u4E2A\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u6570\u7EC4\u7684\u6BCF\u4E2A\u6210\u5458\u5BF9\u5E94\u524D\u9762\u6570\u7EC4\u7684\u6BCF\u4E2A <code>Promise</code> \u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> resolved <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> rejected <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> allSettledPromise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>resolved<span class="token punctuation">,</span> rejected<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

allSettledPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">results</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [</span>
<span class="token comment">//    { status: &#39;fulfilled&#39;, value: 42 },</span>
<span class="token comment">//    { status: &#39;rejected&#39;, reason: -1 }</span>
<span class="token comment">// ]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>Promise.allSettled()</code> \u7684\u8FD4\u56DE\u503C <code>allSettledPromise</code> \uFF0C\u72B6\u6001\u53EA\u53EF\u80FD\u53D8\u6210 <code>fulfilled</code> \u3002</p><p>\u5B83\u7684\u56DE\u8C03\u51FD\u6570\u63A5\u6536\u5230\u7684\u53C2\u6570\u662F\u6570\u7EC4 <code>results</code> \u3002\u8BE5\u6570\u7EC4\u7684\u6BCF\u4E2A\u6210\u5458\u90FD\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5BF9\u5E94\u4F20\u5165 <code>Promise.allSettled()</code> \u7684\u6570\u7EC4\u91CC\u9762\u7684\u4E24\u4E2A <code>Promise</code> \u5BF9\u8C61</p><p>results\u7684\u6BCF\u4E2A\u6210\u5458\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u7684\u683C\u5F0F\u662F\u56FA\u5B9A\u7684\uFF0C\u5BF9\u5E94\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F02\u6B65\u64CD\u4F5C\u6210\u529F\u65F6</span>
<span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> value<span class="token punctuation">}</span>

<span class="token comment">// \u5F02\u6B65\u64CD\u4F5C\u5931\u8D25\u65F6</span>
<span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">reason</span><span class="token operator">:</span> reason<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6210\u5458\u5BF9\u8C61\u7684 <code>status</code> \u5C5E\u6027\u7684\u503C\u53EA\u53EF\u80FD\u662F\u5B57\u7B26\u4E32 <code>fulfilled</code> \u6216\u5B57\u7B26\u4E32 <code>rejected</code> \uFF0C\u7528\u6765\u533A\u5206\u5F02\u6B65\u64CD\u4F5C\u662F\u6210\u529F\u8FD8\u662F\u5931\u8D25\u3002</p><p>\u5982\u679C\u662F\u6210\u529F\uFF08<code>fulfilled</code>\uFF09\uFF0C\u5BF9\u8C61\u4F1A\u6709 <code>value</code> \u5C5E\u6027\uFF0C\u5982\u679C\u662F\u5931\u8D25\uFF08<code>rejected</code>\uFF09\uFF0C\u4F1A\u6709 <code>reason</code> \u5C5E\u6027\uFF0C\u5BF9\u5E94\u4E24\u79CD\u72B6\u6001\u65F6\u524D\u9762\u5F02\u6B65\u64CD\u4F5C\u7684\u8FD4\u56DE\u503C</p><h2 id="promise-any" tabindex="-1"><a class="header-anchor" href="#promise-any" aria-hidden="true">#</a> Promise.any()</h2><p>\u63A5\u53D7\u4E00\u7EC4 <code>Promise</code> \u5B9E\u4F8B\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5305\u88C5\u6210\u4E00\u4E2A\u65B0\u7684 <code>Promise</code> \u5B9E\u4F8B\u8FD4\u56DE</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://v8.dev/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://v8.dev/blog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;blog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://v8.dev/docs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;docs&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">first</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">// \u53EA\u8981\u6709\u4E00\u4E2A fetch() \u8BF7\u6C42\u6210\u529F</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u6240\u6709\u4E09\u4E2A fetch() \u5168\u90E8\u8BF7\u6C42\u5931\u8D25</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u53EA\u8981\u53C2\u6570\u5B9E\u4F8B\u6709\u4E00\u4E2A\u53D8\u6210 <code>fulfilled</code> \u72B6\u6001\uFF0C\u5305\u88C5\u5B9E\u4F8B\u5C31\u4F1A\u53D8\u6210 <code>fulfilled</code> \u72B6\u6001\uFF1B</p><p>\u5982\u679C\u6240\u6709\u53C2\u6570\u5B9E\u4F8B\u90FD\u53D8\u6210 <code>rejected</code> \u72B6\u6001\uFF0C\u5305\u88C5\u5B9E\u4F8B\u5C31\u4F1A\u53D8\u6210 <code>rejected</code> \u72B6\u6001\u3002</p><p><code>Promise.any()</code> \u4E0D\u4F1A\u56E0\u4E3A\u67D0\u4E2A <code>Promise</code> \u53D8\u6210 <code>rejected</code> \u72B6\u6001\u800C\u7ED3\u675F\uFF0C\u5FC5\u987B\u7B49\u5230\u6240\u6709\u53C2\u6570 <code>Promise</code> \u53D8\u6210 <code>rejected</code> \u72B6\u6001\u624D\u4F1A\u7ED3\u675F\u3002</p><h3 id="promise-\u4E0E-await-\u547D\u4EE4\u7ED3\u5408" tabindex="-1"><a class="header-anchor" href="#promise-\u4E0E-await-\u547D\u4EE4\u7ED3\u5408" aria-hidden="true">#</a> <code>Promise()</code> \u4E0E <code>await</code> \u547D\u4EE4\u7ED3\u5408</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/endpoint-a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/endpoint-b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/endpoint-c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> first <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>Promise.any()</code> \u65B9\u6CD5\u7684\u53C2\u6570\u6570\u7EC4\u5305\u542B\u4E09\u4E2A <code>Promise</code> \u64CD\u4F5C\u3002</p><p>\u5176\u4E2D\u53EA\u8981\u6709\u4E00\u4E2A\u53D8\u6210 <code>fulfilled</code> \uFF0C<code>Promise.any()</code> \u8FD4\u56DE\u7684 <code>Promise</code> \u5BF9\u8C61\u5C31\u53D8\u6210 <code>fulfilled</code> \u3002</p><p>\u5982\u679C\u6240\u6709\u4E09\u4E2A\u64CD\u4F5C\u90FD\u53D8\u6210 <code>rejected</code> \uFF0C\u90A3\u4E48 <code>await</code> \u547D\u4EE4\u5C31\u4F1A\u629B\u51FA\u9519\u8BEF</p><h2 id="promise-resolve" tabindex="-1"><a class="header-anchor" href="#promise-resolve" aria-hidden="true">#</a> Promise.resolve()</h2><p>\u5C06\u73B0\u6709\u5BF9\u8C61\u8F6C\u4E3A <code>Promise</code> \u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C06 jQuery \u751F\u6210\u7684 deferred \u5BF9\u8C61\uFF0C\u8F6C\u4E3A\u4E00\u4E2A\u65B0\u7684 Promise \u5BF9\u8C61</span>
<span class="token keyword">const</span> jsPromise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&#39;/whatever.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u53C2\u6570\u662F\u4E00\u4E2A-promise-\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570\u662F\u4E00\u4E2A-promise-\u5B9E\u4F8B" aria-hidden="true">#</a> \u53C2\u6570\u662F\u4E00\u4E2A Promise \u5B9E\u4F8B</h3><p><code>Promise.resolve</code> \u5C06\u4E0D\u505A\u4EFB\u4F55\u4FEE\u6539\u3001\u539F\u5C01\u4E0D\u52A8\u5730\u8FD4\u56DE\u8FD9\u4E2A\u5B9E\u4F8B</p><h3 id="\u53C2\u6570\u662F\u4E00\u4E2A-thenable-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570\u662F\u4E00\u4E2A-thenable-\u5BF9\u8C61" aria-hidden="true">#</a> \u53C2\u6570\u662F\u4E00\u4E2A <code>thenable</code> \u5BF9\u8C61</h3><p><code>thenable</code> \u5BF9\u8C61\u6307\u7684\u662F\u5177\u6709 <code>then</code> \u65B9\u6CD5\u7684\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>Promise.resolve()</code> \u65B9\u6CD5\u4F1A\u5C06\u8FD9\u4E2A\u5BF9\u8C61\u8F6C\u4E3A <code>Promise</code> \u5BF9\u8C61\uFF0C\u7136\u540E\u5C31\u7ACB\u5373\u6267\u884C <code>thenable</code> \u5BF9\u8C61\u7684 <code>then()</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>thenable<span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 42</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>thenable</code> \u5BF9\u8C61\u7684 <code>then()</code> \u65B9\u6CD5\u6267\u884C\u540E\uFF0C\u5BF9\u8C61 <code>p1</code> \u7684\u72B6\u6001\u5C31\u53D8\u4E3A <code>resolved</code> \uFF0C\u4ECE\u800C\u7ACB\u5373\u6267\u884C\u6700\u540E\u90A3\u4E2A <code>then()</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u8F93\u51FA 42</p><h3 id="\u53C2\u6570\u4E0D\u662F\u5177\u6709-then-\u65B9\u6CD5\u7684\u5BF9\u8C61-\u6216\u6839\u672C\u5C31\u4E0D\u662F\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570\u4E0D\u662F\u5177\u6709-then-\u65B9\u6CD5\u7684\u5BF9\u8C61-\u6216\u6839\u672C\u5C31\u4E0D\u662F\u5BF9\u8C61" aria-hidden="true">#</a> \u53C2\u6570\u4E0D\u662F\u5177\u6709 <code>then()</code> \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u6216\u6839\u672C\u5C31\u4E0D\u662F\u5BF9\u8C61</h3><p>\u5982\u679C\u53C2\u6570\u662F\u4E00\u4E2A\u539F\u59CB\u503C\uFF0C\u6216\u8005\u662F\u4E00\u4E2A\u4E0D\u5177\u6709 <code>then()</code> \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u5219 <code>Promise.resolve()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 <code>Promise</code> \u5BF9\u8C61\uFF0C\u72B6\u6001\u4E3A <code>resolved</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Hello</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u65B0\u7684 <code>Promise</code> \u5BF9\u8C61\u7684\u5B9E\u4F8B <code>p</code>\u3002</p><p>\u5B57\u7B26\u4E32 <code>Hello</code> \u4E0D\u5C5E\u4E8E\u5F02\u6B65\u64CD\u4F5C\uFF08\u5B57\u7B26\u4E32\u5BF9\u8C61\u4E0D\u5177\u6709 <code>then</code> \u65B9\u6CD5\uFF09</p><p>\u8FD4\u56DE <code>Promise</code> \u5B9E\u4F8B\u7684\u72B6\u6001\u4ECE\u4E00\u751F\u6210\u5C31\u662F <code>resolved</code> \uFF0C\u6240\u4EE5\u56DE\u8C03\u51FD\u6570\u4F1A\u7ACB\u5373\u6267\u884C\u3002</p><p><code>Promise.resolve()</code> \u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u4F1A\u540C\u65F6\u4F20\u7ED9\u56DE\u8C03\u51FD\u6570\u3002</p><h3 id="\u4E0D\u5E26\u6709\u4EFB\u4F55\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u5E26\u6709\u4EFB\u4F55\u53C2\u6570" aria-hidden="true">#</a> \u4E0D\u5E26\u6709\u4EFB\u4F55\u53C2\u6570</h3><p><code>Promise.resolve()</code> \u65B9\u6CD5\u5141\u8BB8\u8C03\u7528\u65F6\u4E0D\u5E26\u53C2\u6570\uFF0C\u76F4\u63A5\u8FD4\u56DE\u4E00\u4E2A <code>resolved</code> \u72B6\u6001\u7684 <code>Promise</code> \u5BF9\u8C61\u3002</p><p>\u76F4\u63A5\u8C03\u7528 <code>Promise.resolve()</code>\u65B9\u6CD5\uFF0C\u5F97\u5230\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u53D8\u91CF <code>p</code> \u662F\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61</p><p>\u7ACB\u5373 <code>resolve()</code> \u7684 <code>Promise</code> \u5BF9\u8C61\uFF0C\u662F\u5728\u672C\u8F6E&#39;\u4E8B\u4EF6\u5FAA\u73AF&#39;\uFF08<code>event loop</code>\uFF09\u7684\u7ED3\u675F\u65F6\u6267\u884C\uFF0C\u800C\u4E0D\u662F\u5728\u4E0B\u4E00\u8F6E&#39;\u4E8B\u4EF6\u5FAA\u73AF&#39;\u7684\u5F00\u59CB\u65F6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;three&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;two&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// one</span>
<span class="token comment">// two</span>
<span class="token comment">// three</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><code>setTimeout(fn, 0)</code> \u5728\u4E0B\u4E00\u8F6E&#39;\u4E8B\u4EF6\u5FAA\u73AF&#39;\u5F00\u59CB\u65F6\u6267\u884C</p><p><code>Promise.resolve()</code> \u5728\u672C\u8F6E&#39;\u4E8B\u4EF6\u5FAA\u73AF&#39;\u7ED3\u675F\u65F6\u6267\u884C</p><p><code>console.log(&#39;one&#39;)</code> \u662F\u7ACB\u5373\u6267\u884C\uFF0C\u56E0\u6B64\u6700\u5148\u8F93\u51FA</p><h2 id="promise-reject" tabindex="-1"><a class="header-anchor" href="#promise-reject" aria-hidden="true">#</a> Promise.reject()</h2><p>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 <code>Promise</code> \u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u7684\u72B6\u6001\u4E3A <code>rejected</code> (\u64CD\u4F5C\u5931\u8D25)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u51FA\u9519\u4E86</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u751F\u6210\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u7684\u5B9E\u4F8B <code>p</code> \uFF0C\u72B6\u6001\u4E3A <code>rejected</code> \uFF0C\u56DE\u8C03\u51FD\u6570\u4F1A\u7ACB\u5373\u6267\u884C\u3002</p><p><code>Promise.reject()</code> \u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u4F1A\u539F\u5C01\u4E0D\u52A8\u5730\u4F5C\u4E3A <code>reject</code> \u7684\u7406\u7531\uFF0C\u53D8\u6210\u540E\u7EED\u65B9\u6CD5\u7684\u53C2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e <span class="token operator">===</span> <span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>Promise.reject()</code> \u65B9\u6CD5\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u540E\u9762 <code>catch()</code> \u65B9\u6CD5\u7684\u53C2\u6570 <code>e</code> \u5C31\u662F\u8FD9\u4E2A\u5B57\u7B26\u4E32</p><h2 id="promise-try" tabindex="-1"><a class="header-anchor" href="#promise-try" aria-hidden="true">#</a> Promise.try()</h2><p>\u4E0D\u7BA1 <code>f</code> \u662F\u5426\u5305\u542B\u5F02\u6B65\u64CD\u4F5C\uFF0C\u90FD\u7528 <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u4E0B\u4E00\u6B65\u6D41\u7A0B\uFF0C\u7528 <code>catch</code> \u65B9\u6CD5\u5904\u7406 <code>f</code> \u629B\u51FA\u7684\u9519\u8BEF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5982\u679C <code>f</code> \u662F\u540C\u6B65\u51FD\u6570\uFF0C\u90A3\u4E48\u5B83\u4F1A\u5728\u672C\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u7684\u672B\u5C3E\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;now&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;next&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// next</span>
<span class="token comment">// now</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u51FD\u6570 <code>f</code> \u662F\u540C\u6B65\u7684\uFF0C\u4F46\u662F\u7528 <code>Promise</code> \u5305\u88C5\u4E86\u4EE5\u540E\uFF0C\u5C31\u53D8\u6210\u5F02\u6B65\u6267\u884C\u4E86</p>`,202);function e(t,o){return p}var u=s(a,[["render",e]]);export{u as default};
